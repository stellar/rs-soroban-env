{
  "   0 begin": "cpu:9996, mem:0, prngs:-/9b4a753, objs:-/-, vm:-/-, evt:-, store:-/-, foot:-, stk:-, auth:-/-",
  "   1 call bytes_new_from_slice(7558)": "cpu:10251",
  "   2 ret bytes_new_from_slice -> Ok(Bytes(obj#1))": "cpu:14039, mem:7638, objs:-/1@c786d4c4",
  "   3 call upload_wasm(Bytes(obj#1))": "",
  "   4 ret upload_wasm -> Ok(Bytes(obj#3))": "cpu:5385941, mem:512643, objs:-/2@36d0730b, store:-/1@f5376140, foot:1@1b62d44b",
  "   5 call bytes_new_from_slice(32)": "cpu:5387082, mem:512707, objs:-/3@fa6d45ec",
  "   6 ret bytes_new_from_slice -> Ok(Bytes(obj#7))": "cpu:5389871, mem:512819, objs:-/4@7ef540ab",
  "   7 call create_contract(Address(obj#5), Bytes(obj#3), Bytes(obj#7))": "",
  "   8 call obj_cmp(Address(obj#9), Address(obj#5))": "cpu:5394856, mem:512997, objs:-/5@ae4b0671, auth:1@cc28e003/-",
  "   9 ret obj_cmp -> Ok(0)": "cpu:5395542",
  "  10 call get_ledger_network_id()": "cpu:5395800, auth:1@cc28e003/1@c9f2c675",
  "  11 ret get_ledger_network_id -> Ok(Bytes(obj#11))": "cpu:5398697, mem:513109, objs:-/6@de6b2584",
  "  12 ret create_contract -> Ok(Address(obj#13))": "cpu:5436562, mem:514615, objs:-/7@468dd462, store:-/2@6fe974c2, foot:2@779e5daf, auth:-/1@af233859",
  "  13 call call(Address(obj#13), Symbol(loadmem2), Vec(obj#17))": "cpu:5438844, mem:514743, objs:-/9@44433ac, auth:-/-",
  "  14 push VM:db1df18e:loadmem2(Vec(obj#15), U32(65280), U32(32))": "cpu:10574005, mem:1020274, objs:-/10@d0328c06, vm:65536@b1cd98b9/4@70bfd778, stk:1@13279d51, auth:1@8aa6820c/-",
  "  15 call vec_unpack_to_linear_memory(Vec(obj#15), U32(65280), U32(32))": "cpu:10577921, mem:1020376, objs:1@a0418584/10@d0328c06, vm:-/-, stk:1@71135533",
  "  16 ret vec_unpack_to_linear_memory -> Ok(Void)": "cpu:10591750",
  "  17 pop VM:db1df18e:loadmem2 -> Ok(Void)": " vm:65536@6d331be9/4@70bfd778",
  "  18 ret call -> Ok(Void)": " objs:-/10@d0328c06, vm:-/-, stk:-, auth:-/-",
  "  19 end": "cpu:10591750, mem:1020376, prngs:-/9b4a753, objs:-/10@d0328c06, vm:-/-, evt:-, store:-/2@6fe974c2, foot:2@779e5daf, stk:-, auth:-/-"
}