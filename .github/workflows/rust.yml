name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -D warnings

jobs:

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: find . -type f -name '*.rs' -print0 | xargs -I {} -0 rustfmt --check "{}"

  build-common:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
            features:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
            features: vm
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
            profile: release
            features:
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo build --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} --features '${{ matrix.features }}' -p stellar-contract-env-common

  build-guest:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
            profile: release
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo build --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} -p stellar-contract-env-guest

  build-host:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
            features:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: dev
            features: vm
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo build --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} --features '${{ matrix.features }}' -p stellar-contract-env-host

  test-common:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features: std
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features: vm
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features:
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo test --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} --features '${{ matrix.features }}' -p stellar-contract-env-common

  test-guest:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features:
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo test --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} -p stellar-contract-env-guest

  test-host:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            profile: test
            features: vm
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add ${{ matrix.target }}
    - run: cargo test --verbose --profile ${{ matrix.profile }} --target ${{ matrix.target }} --features '${{ matrix.features }}' -p stellar-contract-env-host
